// C'est du C sur edi arduino pour PI Pico

name: 
// 
const uint16_t AF1 = 0, AF2 = 01, AF3 = 0;   // Affichage de variables pour vérification de fonctionnement
const uint16_t AT1 = 250;                   // Attente après allumage des leds
const uint16_t  AT2 = AT1 * 2,  AT3 = AT1 * 3, AT4 = AT2 * 2;

long ncl = 0, nal = 0, wcl = ncl, wal = ncl;

struct led_f {      // étiquette led_f de la structure définissant la future led à allumer. 
  uint8_t pos;      // nombre de possibilités
  uint8_t led_p[6][2];  // détail des leds possibles.
//} led_a[] = { 3, { 0, 1, 0, 2, 1, 0 } };  //, { 0, 1 }, { 0, 3 }, { 1, 0 } };
} led_a[] = { 3, { 0, 1, 0, 2, 1, 0 } };  //, { 0, 1 }, { 0, 3 }, { 1, 0 } };

struct ab {           // Liste des possibilités de mouvement d'une led donnée vers une future led choisie aléatoirement.
  uint8_t a;          // Nombre de possibilités
  uint8_t b [6][2];   // Tableau des possibilités de mouvement. (6 possibilités précisant l'étage (cathode) puis la led (anode)) 
} c[] = { 3, {{ 0, 1}, { 0, 3},                   { 1, 0}},                     //   0 étage 0 led 0
        { 4, {{ 0, 0}, { 0, 2}, { 0, 4},          { 1, 1}}},                    //   1
        { 3, {{ 0, 1}, { 0, 5},                   { 1, 2}}},                    //   2
        { 4, {{ 0, 0}, { 0, 4}, { 0, 6},          { 1, 3}}},                    //   3
        { 5, {{ 0, 1}, { 0, 3}, { 0, 5}, { 0, 7}, { 1, 4}}},                    //   4
        { 4, {{ 0, 2}, { 0, 4}, { 0, 8},          { 1, 5}}},                    //   5
        { 3, {{ 0, 3}, { 0, 7},                   { 1, 6}}},                    //   6
        { 4, {{ 0, 4}, { 0, 6}, { 0, 8},          { 1, 7}}},                    //   7
        { 3, {{ 0, 5}, { 0, 7},                   { 1, 8}}},                    //   8
        
        { 4, {{ 1, 1}, { 1, 3},                   { 0, 0}, { 2, 0}}},           //   9 étage 1 led 0
        { 5, {{ 1, 0}, { 1, 2}, { 1, 4},          { 0, 1}, { 2, 1}}},           //  10
        { 4, {{ 1, 1}, { 1, 5},                   { 0, 2}, { 2, 2}}},           //  11
        { 5, {{ 1, 0}, { 1, 4}, { 1, 6},          { 0, 3}, { 2, 3}}},           //  12
        { 6, {{ 1, 1}, { 1, 3}, { 1, 5}, { 1, 7}, { 0, 4}, { 2, 4}}},           //  13
        { 5, {{ 1, 2}, { 1, 4}, { 1, 8},          { 0, 5}, { 2, 5}}},           //  14
        { 4, {{ 1, 3}, { 1, 7},                   { 0, 6}, { 2, 6}}},           //  15
        { 5, {{ 1, 4}, { 1, 6}, { 1, 8},          { 0, 7}, { 2, 7}}},           //  16
        { 4, {{ 1, 5}, { 1, 7},                   { 0, 8}, { 2, 8}}},           //  17

        { 3, {{ 2, 1}, { 2, 3},                   { 1, 0}}},                    //  18 étage 2 led 0
        { 4, {{ 2, 0}, { 2, 2}, { 2, 4},          { 1, 1}}},                    //  19
        { 3, {{ 2, 1}, { 2, 5},                   { 1, 2}}},                    //  20
        { 4, {{ 2, 0}, { 2, 4}, { 2, 6},          { 1, 3}}},                    //  21
        { 5, {{ 2, 1}, { 2, 3}, { 2, 5}, { 2, 7}, { 1, 4}}},                    //  22
        { 4, {{ 2, 2}, { 2, 4}, { 2, 8},          { 1, 5}}},                    //  23
        { 3, {{ 2, 3}, { 2, 7},                   { 1, 6}}},                    //  24
        { 4, {{ 2, 4}, { 2, 6}, { 2, 8},          { 1, 7}}},                    //  25
        { 3, {{ 2, 5}, { 2, 7},                   { 1, 8}}}                     //  26
        };
int8_t ils = 0, lcs = 0, las = 0;      // Indice de la led dans le tableau, Cathode, Anode suivante
int8_t ix  = 0;                        // Indice du choix de la led parmi les possibilités

uint8_t  i = 1, j = 0;
uint8_t nj = 0;

void setup() {
  Serial.begin(115200);
  while (!Serial) { ; }
  Serial.print(__FILE__); Serial.print("  "); Serial.print(__DATE__); Serial.print("  "); Serial.println(__TIME__);

}

void loop() {
  if ( i ) {
    Serial.println(led_a[0].pos);
    Serial.print(led_a[0].led_p[0][0]); Serial.println(led_a[0].led_p[0][1]);
    Serial.print(led_a[0].led_p[1][0]), Serial.println(led_a[0].led_p[1][1]);
    Serial.print(led_a[0].led_p[2][0]), Serial.println(led_a[0].led_p[2][1]);

    Serial.print(sizeof(c)); Serial.print(" - "); Serial.print(sizeof(c[0])); Serial.print(" - "); Serial.println(sizeof(c)/sizeof(c[0]));
    nj = sizeof(c)/sizeof(c[0]);
    for (int8_t j = 0; j < nj; j++) {
      Serial.print(j); Serial.print(" ---- "); Serial.print(c[j].a); 
      for ( int8_t k = 0; k < c[j].a; k++ ) {
        Serial.print("\t"); Serial.print(c[j].b[k][0]); Serial.print(" - "); Serial.print(c[j].b[k][1]);
      }
      Serial.println("");
    }
//  }
//  i=1;

// tentative on part d'une led au hazard
    Serial.println("");
    randomSeed(millis());
    Serial.println("");
    while (ncl == wcl && nal == wal) { ncl = random(3); nal = random(9); }     // recherche aléatoire de la led de départ
    Serial.print("Led de départ\t");Serial.print("\t\t\t\t\t\tétage "); Serial.print(ncl); Serial.print(", led "); Serial.println(nal);
    ils = (9 * ncl) + nal;      // détermine l'entrée pour déduire la led suivante
    
    while (j < nj) {
      Serial.print("Led suivante\t"); Serial.print("indice "); Serial.print(ils); Serial.print(", possibilités "); Serial.print(c[ils].a); 
      Serial.print("  "); Serial.print(c[ils].b[0][0]); Serial.print("-"); Serial.print(c[ils].b[0][1]); Serial.print(" ");
                          Serial.print(c[ils].b[1][0]); Serial.print("-"); Serial.print(c[ils].b[1][1]); Serial.print(" ");
                          Serial.print(c[ils].b[2][0]); Serial.print("-"); Serial.print(c[ils].b[2][1]); Serial.print(" ");
                          Serial.print(c[ils].b[3][0]); Serial.print("-"); Serial.print(c[ils].b[3][1]); Serial.print(" ");
      ix = random(c[ils].a);      // détermine l'entrée pour sélectionner la led suivante parmi les possibles
      lcs = c[ils].b[ix][0]; las = c[ils].b[ix][1];
      Serial.print("\tétage "); Serial.print(lcs); Serial.print(", led "); Serial.println(las);
      ils = (lcs * 9) + las;
      j++;
    }


    for (int8_t j = 0; j < nj; j++) {                                          // recherche du point suivant 
      randomSeed(millis());
      //Serial.print()
      //while (ncl == wcl && nal == wal) { ncl = random(3); nal = random(9); }
      //Serial.print(ncl); Serial.print(" - "); Serial.print(wcl); Serial.print(" --- ");
      //Serial.print(nal); Serial.print(" - "); Serial.println(wal); 
      //wcl = ncl; wal = nal; 
    }
  }
  i=0;
}
